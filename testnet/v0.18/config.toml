[node]
  node_name = "YOUR_NODE_NAME"
  # Fast sync allows a block to catch up quickly to the chain by downloading blocks in parallel and verifying their commits
  fast_sync = true
  # Specify what backend database to use (goleveldb|cleveldb)
  db = "cleveldb"
  # Specify the application database directory. This is always relative to the root directory of the app.
  db_dir = "nodedata"
  # Specify the log level for olfullnode. 0: Fatal, 1: Error, 2: Warning, 3: Info, 4: Debug, 5: Detail
  loglevel = 4
  # List of transaction tags to index in the database, allows them to be searched by the specified tags
  index_tags = []
  # Tells the indexer to index all available tags, IndexTags has precedence over IndexAllTags
  index_all_tags = false
  # List of services used by the current Node. Possible valued [broadcast, node, owner, query, tx]
  services = ["broadcast", "node", "owner", "query", "tx", "eth"]
  # Start block number of nexus update
  nexus_block = 200
  # the OwnerCredentials and RPCPrivateKey should be configured together
  [node.Auth]
    # Username and Password required to access owner services. Format ["Username:Password", "Username:Password"...]. if OwnerCredential not configured, anyone can create a public access token with a restful call at /token using the RPCPrivateKey
    owner_credentials = []
    # (ED25519 key) This private key will be used to generate a token for authentication through RPC Port; if not configured, anyone can access the SDK rpc port without authentication
    rpc_private_key = ""
  # the schedule for chain state rotation
  [node.ChainStateRotation]
    Recent = 100
    Every = 100
    Cycles = 100

[network]
  rpc_address = "tcp://127.0.0.1:26604"
  # RPC startup timeout in seconds
  rpc_start_timeout = 2
  # Main address for P2P connections
  p2p_address = "tcp://127.0.0.1:26605"
  # Address to advertise for incoming peers to connect to
  external_p2p_address = ""
  sdk_address = "http://127.0.0.1:26606"

[api]
  [api.http]
    # Enable the HTTP-RPC server
    enabled = true
    # HTTP-RPC server listening interface (default: "localhost")
    addr = "localhost"
    # HTTP-RPC server listening port (default: 8545)
    port = 8545
    # API's offered over the HTTP-RPC interface
    api = ["eth", "web3", "net"]
    # Comma separated list of domains from which to accept cross origin requests (browser enforced)
    corsdomain = []
    # Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. (default: "localhost")
    vhosts = ["localhost"]
  [api.ws]
    # Enable the WS-RPC server
    enabled = true
    # WS-RPC server listening interface (default: "localhost")
    addr = "localhost"
    # WS-RPC server listening port (default: 8546)
    port = 8546
    # API's offered over the WS-RPC interface
    api = ["eth", "web3", "net"]
    # Origins from which to accept websockets requests
    origins = []

[p2p]
  # List of seed nodes to connect to
  seeds = ["393ab2e54e3999c7464266bd63a1b1e5fbff6b46@35.232.117.206:26605"]
  # Enables seed mode, which will make the node crawl the network looking for peers
  seed_mode = false
  # List of peers to maintain a persistent connection to
  persistent_peers = ["1f4f9a9ba620c293ff2127e2ef8d1dff5699b2eb@35.223.34.194:26605"]
  # Enable UPNP port forwarding
  upnp = false
  # Set true for strict address routability rules. If true, the node will fail to start if the given P2P address isn't routable'
  addr_book_strict = false
  # Max number of inbound peers
  max_num_inbound_peers = 40
  # Max number of outbound peers to connect to, excluding persistent peers
  max_num_outbound_peers = 10
  # Time to wait before flushing messages out on the connection in milliseconds
  flush_throttle_timeout = 100
  # Max size of a message packet payload, in bytes
  max_packet_msg_payload_size = 1024
  # Rate at which packets can be sent, in bytes/second
  send_rate = 5120000
  # Rate at which packets can be received, in bytes/second
  recv_rate = 5120000
  # Set true to enable the peer-exchange reactor
  pex = true
  # List of peer IDs to keep private (will not be gossiped to other peers)
  private_peer_ids = []
  # Toggle to disable guard against peers connecting from the same IP
  allow_duplicate_ip = true
  # In milliseconds
  handshake_timeout = 20000
  # In milliseconds
  dial_timeout = 3000

[mempool]
  recheck = true
  broadcast = true
  # Size of the mempool
  size = 30000
  cache_size = 60000

[consensus]
  # Determines where consensus is logged (stdout|<filename>)
  log_output = "consensus.log"
  # Determines the verbosity of consensus logs
  log_level = "main:info,state:info,*:error"
  # All timeouts are in milliseconds
  timeout_propose = 3000
  timeout_propose_delta = 500
  timeout_prevote = 1000
  timeout_prevote_delta = 500
  timeout_precommit = 1000
  timeout_precommit_delta = 500
  timeout_commit = 15000
  # Make progress as soon as we have all precommits (as if TimeoutCommit = 0)
  skip_timeout_commit = false
  # Should this node create empty blocks
  create_empty_blocks = true
  # Interval between empty block creation in milliseconds
  create_empty_blocks_interval = 9000
  # Duration values in milliseconds
  peer_gossip_sleep_duration = 100
  peer_query_maj23_sleep_duration = 2000

[chain_driver]
  # bitcoin chain types, mainnet, testnet3, or regtest
  bitcoin_chain_type = ""
  # ip address of bitcoin node
  bitcoin_node_address = ""
  # rpc port of bitcoin node
  "bitcoin rpc_port" = "18332"
  # rpc username of bitcoin node
  bitcoin_rpc_username = ""
  # rpc password of bitcoin node
  bitcoin_rpc_password = ""
  # token to use blockcypher APIs
  blockcypher_token = ""

[ethereum_chain_driver]
  # ethereum node connection url default: http://localhost:7545
  connection = "HTTP://127.0.0.1:7545"
